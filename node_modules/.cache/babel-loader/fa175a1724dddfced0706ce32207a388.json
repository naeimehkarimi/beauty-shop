{"ast":null,"code":"var _jsxFileName = \"D:\\\\Main\\\\react-projects\\\\sample\\\\ruban-shop\\\\src\\\\components\\\\login\\\\Register.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { registerUser } from '../../services/userService';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { useRef } from 'react';\n\nconst Register = () => {\n  const [fullname, setFullname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const validator = useRef(new SimpleReactValidator({\n    messages: {\n      required: 'پر کردن این فیلد الزامی  می باشد',\n      min: 'کمتر از 5 کاراکتر نباید باشد',\n      email: 'ایمیل نوشته شده صحیح نمی باشد'\n    },\n    element: message => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red',\n        fontSize: '.8rem',\n        marginRight: '.5rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }\n    }, message)\n  }));\n  const [, forceUpdate] = useState();\n  const [policy, setPolicy] = useState();\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n    setFullname('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const user = {\n      fullname,\n      email,\n      password\n    };\n\n    try {\n      if (validator.current.allValid()) {\n        const {\n          status,\n          data\n        } = await registerUser(user);\n\n        if (status === 201) {\n          toast.success('کاربر با موفقیت ساخته شد', {\n            position: 'top-center',\n            closeOnClick: true\n          });\n          console.log(data);\n          reset();\n        }\n      } else {\n        validator.current.showMessages();\n        forceUpdate(1);\n      }\n    } catch (ex) {\n      toast.error('کاربر ساخنه نشد', {\n        position: 'top-center',\n        closeOnClick: true\n      });\n      console.log(ex);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row w-100 p-0 m-0 justify-content-center user-login-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 user-login \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"login-form w-100  text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, \"\\u0646\\u0627\\u0645 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u06CC\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"username\",\n    type: \"text\",\n    id: \"username\",\n    required: \"\",\n    placeholder: \"\",\n    value: fullname,\n    onChange: e => {\n      setFullname(e.target.value);\n      validator.current.showMessageFor('username');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 41\n    }\n  }), validator.current.message('username', fullname, 'required|min:5')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 41\n    }\n  }, \"\\u0627\\u06CC\\u0645\\u06CC\\u0644\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"email\",\n    type: \"email\",\n    id: \"email\",\n    required: \"\",\n    placeholder: \"\",\n    value: email,\n    onChange: e => {\n      setEmail(e.target.value);\n      validator.current.showMessageFor('email');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 41\n    }\n  }), validator.current.message('email', email, 'required|email')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 41\n    }\n  }, \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control\",\n    name: \"password\",\n    type: \"password\",\n    id: \"password\",\n    required: \"\",\n    placeholder: \"\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n      validator.current.showMessageFor('password');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }), validator.current.message('password', password, 'required|min:5')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group mb-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-control  terms ml-2\",\n    type: \"checkbox\",\n    name: \"policy\",\n    value: policy,\n    onChange: e => {\n      setPolicy(e.currentTarget.checked);\n      validator.current.showMessageFor('policy');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 45\n    }\n  }, \"\\u0642\\u0648\\u0627\\u0646\\u06CC\\u0646 \\u0648 \\u0645\\u0642\\u0631\\u0631\\u0627\\u062A \\u0631\\u0627 \\u0645\\u06CC\\u067E\\u0630\\u06CC\\u0631\\u0645\")), validator.current.message('policy', policy, 'required')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-danger text-white w-75 login-btn py-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 41\n    }\n  }, \"\\u062A\\u0627\\u06CC\\u06CC\\u062F\"))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Main/react-projects/sample/ruban-shop/src/components/login/Register.js"],"names":["React","Fragment","useState","useEffect","NavLink","toast","registerUser","SimpleReactValidator","useRef","Register","fullname","setFullname","email","setEmail","password","setPassword","validator","messages","required","min","element","message","color","fontSize","marginRight","forceUpdate","policy","setPolicy","reset","handleSubmit","event","preventDefault","user","current","allValid","status","data","success","position","closeOnClick","console","log","showMessages","ex","error","e","target","value","showMessageFor","currentTarget","checked"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { registerUser } from '../../services/userService';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { useRef } from 'react';\r\n\r\nconst Register = () => {\r\n  const [fullname, setFullname] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const validator = useRef(\r\n      new SimpleReactValidator({\r\n          messages: {\r\n              required: 'پر کردن این فیلد الزامی  می باشد',\r\n              min: 'کمتر از 5 کاراکتر نباید باشد',\r\n              email: 'ایمیل نوشته شده صحیح نمی باشد',\r\n          },\r\n          element: (message) => <div style={{ color: 'red',fontSize:'.8rem',marginRight:'.5rem' }}>{message}</div>,\r\n      })\r\n  );\r\n\r\n  const [, forceUpdate] = useState();\r\n  const [policy, setPolicy] = useState();\r\n  const reset = () => {\r\n      setEmail('');\r\n      setPassword('');\r\n      setFullname('');\r\n  };\r\n  const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      const user = {\r\n          fullname,\r\n          email,\r\n          password,\r\n      };\r\n\r\n      try {\r\n          if (validator.current.allValid()) {\r\n              const { status, data } = await registerUser(user);\r\n              if (status === 201) {\r\n                  toast.success('کاربر با موفقیت ساخته شد', {\r\n                      position: 'top-center',\r\n                      closeOnClick: true,\r\n                  });\r\n                  console.log(data);\r\n                  reset();\r\n              }\r\n          } else {\r\n              validator.current.showMessages();\r\n              forceUpdate(1);\r\n          }\r\n      } catch (ex) {\r\n          toast.error('کاربر ساخنه نشد', {\r\n              position: 'top-center',\r\n              closeOnClick: true,\r\n          });\r\n          console.log(ex);\r\n      }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"row w-100 p-0 m-0 justify-content-center user-login-container\">\r\n        <div className=\"col-md-6 user-login \" >\r\n         \r\n        \r\n          <form\r\n                                    onSubmit={handleSubmit}\r\n                                    className='login-form w-100  text-right'\r\n                                >\r\n                                    <div className='form-group mb-3'>\r\n                                        <label for='username'>نام کاربری</label>\r\n                                        <input\r\n                                            className='form-control'\r\n                                            name='username'\r\n                                            type='text'\r\n                                            id='username'\r\n                                            required=''\r\n                                            placeholder=''\r\n                                            value={fullname}\r\n                                            onChange={(e) => {\r\n                                                setFullname(e.target.value);\r\n                                                validator.current.showMessageFor(\r\n                                                    'username'\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                        {validator.current.message(\r\n                                            'username',\r\n                                            fullname,\r\n                                            'required|min:5'\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='form-group mb-3'>\r\n                                        <label for='email'>ایمیل</label>\r\n                                        <input\r\n                                            className='form-control'\r\n                                            name='email'\r\n                                            type='email'\r\n                                            id='email'\r\n                                            required=''\r\n                                            placeholder=''\r\n                                            value={email}\r\n                                            onChange={(e) => {\r\n                                                setEmail(e.target.value);\r\n                                                validator.current.showMessageFor(\r\n                                                    'email'\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                        {validator.current.message(\r\n                                            'email',\r\n                                            email,\r\n                                            'required|email'\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='form-group mb-1'>\r\n                                        <label for='password'>رمز عبور</label>\r\n                                        <input\r\n                                            className='form-control'\r\n                                            name='password'\r\n                                            type='password'\r\n                                            id='password'\r\n                                            required=''\r\n                                            placeholder=''\r\n                                            value={password}\r\n                                            onChange={(e) => {\r\n                                                setPassword(e.target.value);\r\n                                                validator.current.showMessageFor(\r\n                                                    'password'\r\n                                                );\r\n                                            }}\r\n                                        />\r\n                                        {validator.current.message(\r\n                                            'password',\r\n                                            password,\r\n                                            'required|min:5'\r\n                                        )}\r\n                                    </div>\r\n                                    <div className='form-group mb-3 '>\r\n                                        <div className=' d-flex align-items-center'>\r\n                                            <input\r\n                                                className='form-control  terms ml-2'\r\n                                                type='checkbox'\r\n                                                name='policy'\r\n                                                value={policy}\r\n                                                onChange={(e) => {\r\n                                                    setPolicy(\r\n                                                        e.currentTarget.checked\r\n                                                    );\r\n                                                    validator.current.showMessageFor(\r\n                                                        'policy'\r\n                                                    );\r\n                                                }}\r\n                                            />\r\n\r\n                                            <span className=''>\r\n                                                قوانین و مقررات را میپذیرم\r\n                                            </span>\r\n                                        </div>\r\n                                        {validator.current.message(\r\n                                            'policy',\r\n                                            policy,\r\n                                            'required'\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className='d-flex justify-content-center mt-4'>\r\n                                        <button\r\n                                            type='submit'\r\n                                            className='btn btn-danger text-white w-75 login-btn py-2'\r\n                                        >\r\n                                            تایید\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n        </div>\r\n        \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}